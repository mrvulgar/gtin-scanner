#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ PDF —Å Data Matrix –∫–æ–¥–∞–º–∏
"""

import fitz  # PyMuPDF
from PIL import Image, ImageDraw
from pylibdmtx.pylibdmtx import encode
import io

def create_test_datamatrix_pdf():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π PDF —Å Data Matrix –∫–æ–¥–∞–º–∏"""
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π PDF –¥–æ–∫—É–º–µ–Ω—Ç
    doc = fitz.open()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ Data Matrix –∫–æ–¥–æ–≤
    test_codes = [
        "04650505840616",
        "1234567890123", 
        "9876543210987",
        "5555555555555"
    ]
    
    for i, code in enumerate(test_codes):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        page = doc.new_page(width=595, height=842)  # A4 —Ä–∞–∑–º–µ—Ä
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Data Matrix –∫–æ–¥
        encoded = encode(code.encode('utf-8'))
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PIL Image
        width = encoded.width
        height = encoded.height
        pixels = encoded.pixels
        
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ Data Matrix –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        dm_img = Image.new('L', (width, height), 255)  # –ë–µ–ª—ã–π —Ñ–æ–Ω
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–∏–∫—Å–µ–ª–∏
        for y in range(height):
            for x in range(width):
                pixel_index = y * width + x
                if pixel_index < len(pixels) and pixels[pixel_index]:
                    dm_img.putpixel((x, y), 0)  # –ß–µ—Ä–Ω—ã–π –ø–∏–∫—Å–µ–ª—å
        
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä Data Matrix –∫–æ–¥–∞ –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
        dm_img = dm_img.resize((200, 200), Image.Resampling.NEAREST)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        bg_img = Image.new('RGB', (595, 842), 'white')
        draw = ImageDraw.Draw(bg_img)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        draw.text((50, 50), f"–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {i+1}", fill='black')
        draw.text((50, 80), f"Data Matrix –∫–æ–¥: {code}", fill='black')
        
        # –†–∞–∑–º–µ—â–∞–µ–º Data Matrix –∫–æ–¥ –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
        bg_img.paste(dm_img, (150, 150))
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PIL Image –≤ –±–∞–π—Ç—ã
        img_bytes = io.BytesIO()
        bg_img.save(img_bytes, format='PNG')
        img_bytes.seek(0)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É PDF
        img_rect = fitz.Rect(0, 0, 595, 842)
        page.insert_image(img_rect, stream=img_bytes.getvalue())
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
    doc.save("test_datamatrix_codes.pdf")
    doc.close()
    
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π PDF —Å Data Matrix —Å–æ–∑–¥–∞–Ω: test_datamatrix_codes.pdf")
    print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü: {len(test_codes)}")
    print(f"üî¢ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–¥—ã: {test_codes}")

if __name__ == "__main__":
    create_test_datamatrix_pdf()
